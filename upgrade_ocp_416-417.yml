---
- name: Remove elasticsearch operator
  hosts: localhost
  connection: local 
  gather_facts: no 

  vars:
    openshift_admin_username: "{{ xtra_openshift_admin_username | default('username') }}"
    openshift_admin_password: "{{ xtra_openshift_admin_password | default('password') }}"
    openshift_api_endpoint: "{{ xtra_openshift_api | default('https://api:6443') }}"

    target_channel: stable-4.17 
    current_elastic_version: 5.8.15 

  tasks:
    - name: Ensure extra_vars.yml is provided 
      ansible.builtin.assert:
        that:
          - xtra_openshift_api is defined 
          - xtra_openshift_admin_username is defined 
          - xtra_openshift_admin_password is defined 
        fail_msg: 
          - "Please make sure to provide the extra_vars.yml file using the provided template, extra_vars.yml.template"
          - "See readme for details."
        success_msg: "Extra variables are defined."

    - name: Request an OpenShift token
      redhat.openshift.openshift_auth: 
        username: "{{ openshift_admin_username }}"
        password: "{{ openshift_admin_password }}"
        host: "{{ openshift_api_endpoint }}"
        verify_ssl: False 
      register: openshift_auth_results

    - name: Start cluster upgrade steps 
      block: 
        - name: Get OpenShift version 
          kubernetes.core.k8s_info:
            api_version: config.openshift.io/v1
            kind: ClusterVersion 
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ openshift_api_endpoint }}"
            verify_ssl: False 
          register: cluster_version 

        - ansible.builtin.debug:
            msg:
              - "Current OpenShift Cluster version is {{ cluster_version.resources[0].status.history[0].version }}"

        - name: Check if upgradable and exit if not
          ansible.builtin.assert:
            that:
              - cluster_version.resources[0].status.availableUpdates is defined
            fail_msg: "No updates available, updating channel"
            success_msg: "Update available"

        - name: Change OpenShift update channel to target channel
          kubernetes.core.k8s:
            state: present
            api_version: config.openshift.io/v1
            kind: ClusterVersion
            name: version
            merge_type: merge
            definition:
              spec:
                channel: "{{ target_channel }}"
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ openshift_api_endpoint }}"
            verify_ssl: False 
          when: cluster_version.resources[0].status.availableUpdates[0].version is defined

        - name: Get updated OpenShift ClusterVersion info with install plan for upgrade 
          kubernetes.core.k8s_info:
            api_version: config.openshift.io/v1
            kind: ClusterVersion 
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ openshift_api_endpoint }}"
            verify_ssl: False 
          register: planned_cluster_version 

        - name: Remove ElasticSearch Subscription
          kubernetes.core.k8s:
            state: absent
            api_version: operators.coreos.com/v1alpha1
            kind: Subscription
            namespace: openshift-operators-redhat
            name: elasticsearch-operator
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ openshift_api_endpoint }}"
            verify_ssl: False 
          register: es_subscription
          delay: 5
          retries: 10
          until: es_subscription.result | length == 0

        - name: Remove ElasticSearch ClusterServiceVersion
          kubernetes.core.k8s:
            state: absent
            api_version: operators.coreos.com/v1alpha1
            kind: ClusterServiceVersion
            namespace: openshift-operators-redhat
            name: elasticsearch-operator.v{{ current_elastic_version }}
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ openshift_api_endpoint }}"
            verify_ssl: False 
          register: es_clusterserviceversion
          delay: 5 
          retries: 10 
          until: es_clusterserviceversion.result | length == 0 

        - name: Upgrade OpenShift Cluster to latest available in channel (this step can take 45-90 minutes)
          kubernetes.core.k8s:
            state: present
            api_version: config.openshift.io/v1
            kind: ClusterVersion
            name: version
            definition:
              spec:
                channel: "{{ target_channel }}"
                desiredUpdate:
                  version: "{{ planned_cluster_version.resources[0].status.availableUpdates[0].version }}"
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ openshift_api_endpoint }}"
            verify_ssl: False 
            wait: yes 
            wait_condition:
              type: Available 
              status: "True" 
              # reason: ClusterOperatorUpdating
            wait_timeout: 5200
          when: planned_cluster_version.resources[0].status.availableUpdates[0].version is defined

        # - name: Create ElasticSearch Subscription
        #   kubernetes.core.k8s:
        #     state: present
        #     definition:
        #       apiVersion: operators.coreos.com/v1alpha1
        #       kind: Subscription
        #       metadata:
        #         name: elasticsearch-operator.v5.8.3
        #         namespace: openshift-operators-redhat
        #       spec:
        #         channel: stable
        #         installPlanApproval: Automatic
        #         name: elasticsearch-operator
        #         source: elasticsearch-operator-catalogsource
        #         sourceNamespace: openshift-operators-redhat
        #         startingCSV: elasticsearch-operator.v5.8.3
        #     api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
        #     host: "{{ openshift_api_endpoint }}"
        #     verify_ssl: False 

      always:
        - name: If login succeeded, log out (revoke access token)
          redhat.openshift.openshift_auth:
            state: absent
            api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
            host: "{{ openshift_api_endpoint }}"
            verify_ssl: False 

